"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3079],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(r),d=n,h=u["".concat(l,".").concat(d)]||u[d]||f[d]||a;return r?o.createElement(h,i(i({ref:t},c),{},{components:r})):o.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:n,i[1]=p;for(var s=2;s<a;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},31187:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var o=r(87462),n=(r(67294),r(3905));const a={sidebar_position:3,sidebar_label:"behave"},i="ReportPortal behave Integration",p={unversionedId:"log-data-in-reportportal/test-framework-integration/Python/behave",id:"log-data-in-reportportal/test-framework-integration/Python/behave",title:"ReportPortal behave Integration",description:"There is Behave extension for reporting test results of Behave to the ReportalPortal.",source:"@site/docs/log-data-in-reportportal/test-framework-integration/Python/behave.md",sourceDirName:"log-data-in-reportportal/test-framework-integration/Python",slug:"/log-data-in-reportportal/test-framework-integration/Python/behave",permalink:"/docs/log-data-in-reportportal/test-framework-integration/Python/behave",draft:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/log-data-in-reportportal/test-framework-integration/Python/behave.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"behave"},sidebar:"defaultSidebar",previous:{title:"Robot Framework",permalink:"/docs/log-data-in-reportportal/test-framework-integration/Python/RobotFramework"},next:{title:"nosetests",permalink:"/docs/log-data-in-reportportal/test-framework-integration/Python/nosetests"}},l={},s=[],c={toc:s},u="wrapper";function f(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"reportportal-behave-integration"},"ReportPortal behave Integration"),(0,n.kt)("p",null,"There is ",(0,n.kt)("a",{parentName:"p",href:"https://behave.readthedocs.io/en/stable/"},"Behave")," extension for reporting test results of Behave to the ReportalPortal."),(0,n.kt)("p",null,"Behave is a popular Python-based testing framework. It can be used for testing different types of applications: web applications, APIs, desktop. Behave has a syntax which is easy to understand even for non-technical users."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/reportportal/agent-python-behave#readme"},"Installation guide")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/reportportal/examples-python/tree/master/behave"},"Examples")))}f.isMDXComponent=!0}}]);