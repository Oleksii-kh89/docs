"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9714],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>g});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),p=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},d="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},h=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),d=p(n),h=r,g=d["".concat(s,".").concat(h)]||d[h]||c[h]||i;return n?a.createElement(g,o(o({ref:e},u),{},{components:n})):a.createElement(g,o({ref:e},u))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[d]="string"==typeof t?t:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},38238:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_label:"Integration with Jenkins"},o="Integration with Jenkins",l={unversionedId:"quality-gates/IntegrationWithCICD/IntegrationWithJenkins",id:"quality-gates/IntegrationWithCICD/IntegrationWithJenkins",title:"Integration with Jenkins",description:"Jenkins configuration",source:"@site/docs/quality-gates/IntegrationWithCICD/IntegrationWithJenkins.mdx",sourceDirName:"quality-gates/IntegrationWithCICD",slug:"/quality-gates/IntegrationWithCICD/IntegrationWithJenkins",permalink:"/docs/quality-gates/IntegrationWithCICD/IntegrationWithJenkins",draft:!1,editUrl:"https://github.com/reportportal/docs/blob/develop/docs/quality-gates/IntegrationWithCICD/IntegrationWithJenkins.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"Integration with Jenkins"},sidebar:"defaultSidebar",previous:{title:"Integration with GitLab CI",permalink:"/docs/quality-gates/IntegrationWithCICD/IntegrationWithGitLabCI"},next:{title:"User role guides",permalink:"/docs/user-role-guides/"}},s={},p=[{value:"Jenkins configuration",id:"jenkins-configuration",level:3}],u={toc:p},d="wrapper";function c(t){let{components:e,...i}=t;return(0,r.kt)(d,(0,a.Z)({},u,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"integration-with-jenkins"},"Integration with Jenkins"),(0,r.kt)("media-view",{thumbnail:n(54932),src:"https://youtu.be/W7BBhni9ANU",alt:"Quality Gates in CI/CD and our continuous testing platform",type:"video"}),(0,r.kt)("h3",{id:"jenkins-configuration"},"Jenkins configuration"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to \u201cManage Jenkins\u201d -> \u201cManage Plugins\u201d."),(0,r.kt)("li",{parentName:"ol"},"Make sure that the necessary Jenkins plugin is installed:")),(0,r.kt)("p",null,"a. Switch to the \u201cInstalled\u201d tab and search for the \u201cWebhook Step\u201d plugin."),(0,r.kt)("p",null,"b. If no results of the search:"),(0,r.kt)("p",null,"i. Switch to the \u201cAvailable\u201d tab;"),(0,r.kt)("p",null,"ii. Search for \u201cWebhook Step\u201d;"),(0,r.kt)("p",null,"iii. Install the plugin with \u201cDownload now and install after restart\u201d."),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Define webhook configuration to the Jenkins job/pipeline before tests execution:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},'def hook = registerWebhook();\ndef encodedUrl = sh(script: "echo -n ${hook.getURL().toString()} | base64 -w 0", returnStdout: true)\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"encodedUrl")," \u2013 this is a unique string that will be generated from the Jenkins job/pipeline and connect each reported launch with the appropriate Jenkins run from which the launch was reported."),(0,r.kt)("p",null,"Put the ",(0,r.kt)("inlineCode",{parentName:"p"},"encodedUrl"),"\xa0variable into the test execution string at the enumeration of ",(0,r.kt)("inlineCode",{parentName:"p"},"RP.attributes"),". For example(Maven build):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"Drp.attributes='k1:v1;k2:v2;rp.webhook.key:${encodedUrl}'\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Configure webhook waiting data from RP:")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"a. Option #1")),(0,r.kt)("p",null,"This option allows sending the Quality Gates result status to the separate pipeline stage. It doesn\u2019t affect the tests execution stage, and the status of that stage will be determined by the result of the Quality Gate status.\nAdd additional pipeline stage Wait for webhook\xa0and define the particular TIMEOUT_TIME, how long Jenkins should wait for data from RP:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"stage('Wait for webhook') {\n     timeout(time: params.TIMEOUT_TIME, unit: params.TIMEOUT_UNIT) {\n\n         echo 'Waiting for RP processing...'\n         data = waitForWebhook hook;\n         echo \"Processing finished... ${data}\"\n\n         def jsonData = readJSON text: data\n         assert jsonData['status'] == 'PASSED' \n      }\n}\n")),(0,r.kt)("p",null,"Parameters for ",(0,r.kt)("inlineCode",{parentName:"p"},"TIMEOUT_TIME"),"\xa0and ",(0,r.kt)("inlineCode",{parentName:"p"},"TIMEOUT_UNIT"),"\xa0can be defined like that:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"parameters {\n        string(name: 'TIMEOUT_TIME', defaultValue: '30', description: '')\n        string(name: 'TIMEOUT_UNIT', defaultValue: 'SECONDS', description: '')\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"b. Option #2")),(0,r.kt)("p",null,"This option should send the results from the RP to the tests run pipeline stage, and the status of that stage(tests execution) will be determined by the result of the Quality Gate status.\nAdd next code in the pipeline stage, where tests run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"echo 'Waiting for RP processing...'\ndata = waitForWebhook hook;\necho \"Processing finished... ${data}\"\n\ndef jsonData = readJSON text: data\nassert jsonData['status'] == 'PASSED'\n")),(0,r.kt)("p",null,"If the Jenkins received a response about QualityGate status from RP, the build status should be appropriately marked:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Jenkins Job Status"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Quality Gate Status"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"SUCCESS"),(0,r.kt)("td",{parentName:"tr",align:"center"},"PASSED"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quality Gate\xa0is passed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"ABORTED"),(0,r.kt)("td",{parentName:"tr",align:"center"},"UNDEFINED"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The Jenkins timeout has been exceeded")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"FAILED"),(0,r.kt)("td",{parentName:"tr",align:"center"},"FAILED"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Quality Gate is failed")))))}c.isMDXComponent=!0},54932:(t,e,n)=>{n.r(e),n.d(e,{default:()=>a});const a=n.p+"assets/images/ReportThatIsAlreadySent-2320cb3a4598c53376d2fce436432362.png"}}]);